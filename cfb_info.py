# -*- coding: utf-8 -*-
"""cfb_info.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQQ0FS002NMtZ8XZBgh2vapbsBBDAEtP
"""

import requests
from bs4 import BeautifulSoup

url = requests.get('https://www.sports-reference.com/cfb/schools/michigan/passing.html')
soup = BeautifulSoup(url.text, 'html.parser')

table = soup.find('div', attrs = {'id' : 'div_passing'}).find('table').find('tbody')

#list initialization
lst_name = []
lst_cmp = []
lst_size =[]
lst_rtng = []

rows = table.find_all('tr')
#for loop
for row in rows:
  columns = row.find_all('td')

  if len(columns) > 0:
    name = columns[0].find('a').text
    lst_name.append(name)
    yearsActive = columns[1].text + "-" + columns[2].text
    cmp = float(columns[3].text)
    pct = round(float(columns[5].text), 1)

    #Attributed Player Ratings
    if(columns[11].text != ''):
      rtng = float(columns[11].text)
    elif(columns[11].text == ''):
      rtng = float(0.00) #Data Cleaning Available

    lst_rtng.append(rtng)
    lst_cmp.append(cmp)
    cfb = [name, yearsActive, cmp, pct, rtng]
    print(cfb)

import numpy as np
import pandas as pd
import seaborn as sb
import matplotlib.pyplot as plt
import seaborn as sb

playerinfo = {"NAME": lst_name,
              "CMP": lst_cmp,
              "RTNG": lst_rtng}
len(playerinfo['NAME'])

for i in range(len(playerinfo["NAME"])-1):
  lst_size.append(i)

df = pd.DataFrame(data=playerinfo)
df.rename(columns={"NAME": "Players", "CMP": "Completions", "RTNG": "Rating" }, inplace=True)
df.head()

df.dropna(subset="Rating", inplace=True)
len((df["Rating"].isna())==False) #count how many !NaN

df['Rating'][105]

df_scatter = sb.scatterplot(data=df, x="Completions", y="Rating")

df["logCMP"] = np.log2(df["Completions"].clip(1))
df["logRating"] = np.log2(df["Rating"].clip(1))
dfg = sb.regplot(data=df, x="logCMP", y="logRating",color="skyblue", lowess=True)

from matplotlib import pyplot as plt
df['CMP'].plot(kind='line', figsize=(8, 4), title='CMP')
plt.gca().spines[['top', 'right']].set_visible(False)